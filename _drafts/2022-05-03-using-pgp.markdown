---
layout: post
title:  "PGP"
date:   2022-05-03 20:35:00 -0500
categories: jekyll update
---

## PGP Quick Overview

PGP stands for **P**retty **G**ood **P**rivacy.
It's an encryption system used in data communication that utilizes public key cryptography to sign and encrypt/decrypt data. It was created by cryptographer Phil Zimmerman in 1991. When using a PGP program you can have 2 keys generated, 1 public key and 1 private key and you'll be able to use these keys to communicate with any other person in the world that is also utilizing PGP; it is perfectly private communication. PGP is known as the closest to military grade encryption that is available for public use.

In this post, I'll run through an extremely general overview of PGP as I understand it, what program I used for my initial setup, and how I am using it now. Party on...

<br/>
**Public Key**

Your public key should be broadcast to the world. Put it on your blog, your social media accounts, etc.

This is the key that others can use to encrypt the data/message/email they are sending you during your communications.

<br/>
**Private Key**

Your private key must be kept a secret, as this is the key that gives you the ability to decrypt messages and data and provide your signature to authenticate yourself.

If your private key, gets leaked or hacked, then in theory, whoever has your private key will have the ability to decrypt messages and data sent with your public key. They can also impersonate you by signing with your private key.

<br/>
**Encryption Process**
![PGP Encryption Process](/img/PGP/pgpencryptionprocess.jpg)

<br/>
<br/>
**Why Use It?**
- **Authentication:** You can sign using your private key, thus proving your identity.
- **Data Protection:** It ensures the data sent was not modified during transmission.
- **Privacy:** Data is always encrypted and secure, only to be viewed by the parties intended.
- **Security:** Data can be shared securely be two or many users.

<br/>
<br/>

## How to Set it Up?

**Installation**

Since I'm using Linux Mint, I'm going to use [GnuPG](https://gnupg.org/), which is a free implementation of the PGP system standard.

<br/>
To start things off, run the command below to install [GnuPG](https://gnupg.org/) along with GPA.

*Note: GPA stands for GNU Privacy Assistant, it is the graphical user interface for GnuPG.*

<br/>
{% highlight javascript %}
  sudo apt-get install gnupg2 gpa
{% endhighlight %}

![Install GnuPG Output](/img/PGP/installgnupgoutput.jpg)

<br/>
<br/>
**Generate the Key Pair**

After installation is complete, the next thing we need to do is generate our key pair. To do so, run the following command below.

{% highlight javascript %}
  gpg --full-generate-key
{% endhighlight %}

<br/>

You'll be prompted to select the type of key you want.

Select option 1: RSA and RSA (default).

![Key Type](/img/PGP/generatekeyscommandandselection.jpg)

<br/>
<br/>
Next, you'll be prompted to select the bit size. The default option is 3072, but we will select the maximum of 4096 bits.

![Key Size](/img/PGP/keysize.jpg)

<br/>
<br/>
You'll also need to specify how long the keys should remain valid. This is 100% up to you, but I selected "0 = key does not expire" for mine.

![Key Expiration](/img/PGP/keyexpire.jpg)

<br/>
<br/>
Specify the user id that you want associated to your keys and then enter "o" or "q" to confirm your entry.

![User Info](/img/PGP/userinfo.jpg)

<br/>
<br/>
You'll next have to enter the passphrase for your key pair. Do not forget this passphrase.

![Enter Passphrase](/img/PGP/enterpassphrase.jpg)

<br/>
<br/>

And finally, we have our keys generated yay!!

![Done Output](/img/PGP/doneoutput.jpg)
<br/>
<br/>

What we'll want to do next is launch GPA so we can check out what options we have to manage our keys.

<br/>
Run the command below to launch GPA

{% highlight javascript %}
  sudo gpa
{% endhighlight %}

<br/>

When GPA is first opened, it's going to ask us if we want to generate a private key. Since this is my first time using it, I'm going to click on "Generate key now".

![Generate Private Key](/img/PGP/generateprivatekey.jpg)

<br/>

Enter in the details asked throughout the process.

![Enter Full Name](/img/PGP/enterfullname.jpg)


![Enter Email Address](/img/PGP/enteremailaddress.jpg)

<br/>
It's best to back up the key now, so let's do that.

![Back Up Key](/img/PGP/takebackupofkey.jpg)

<br/>
Finally, enter your passphrase for your private key and confirm it.

![Private Key Passphrase](/img/PGP/enterpassphraseprivatekey.jpg)

<br/>
Now in the key manager area of GPA, you should see the private key entry that we just created.

![Key Manager Key](/img/PGP/keymanagerkey.jpg)
